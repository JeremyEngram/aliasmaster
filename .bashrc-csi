# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# bash aliases master file for ssh connectors
if [ -f ~/.bash_connectors ]; then
    . ~/.bash_connectors
fi

# bash functions master file
if [ -f ~/.bash_functions ]; then
    . ~/.bash_functions
fi


# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

############################################################################################################# END DEFAULT BASHRC FILE

export PATH="/opt/csitools:/opt/csitools/helper:$HOME/bin:$HOME/.local/bin:/usr/sbin:/opt/jdk-17/bin/:$PATH"

export JAVA_HOME=/usr/lib/jvm/bellsoft-java8-full-amd64

export PATH=$PATH:/usr/local/bin/omnisint
export PATH=$PATH:/usr/local/bin/omnisint/standalone
export PATH=$PATH:/usr/local/bin/omnisint/py
export PATH=$PATH:/usr/local/bin/omnisint/sh
export PATH=$PATH:/usr/local/bin/standalone

export PATH=$PATH:/home/$user/bin
export PATH=$PATH:/home/$user/scripts

export PATH=$PATH:~/.local/bin
export PATH=$PATH:/var/www/html/scripts
export PATH=$PATH:/opt


# SYSTEM COMMANDS LOGGING EXECUTION
whoami="\$(whoami)@\$(echo \$SSH_CONNECTION | awk '{print \$1}')"
export PROMPT_COMMAND='RETRN_VAL=\$?;logger -p local6.debug "\$whoami [$$] \$(history 1 | sed "s/^[ ]*[0-9]\+[ ]*//" )"'


############################################################

source ~/.autoenv/activate.sh

alias arm='sudo chmod +x'

alias url2pdf='wkhtmltopdf'
alias pdf2txt=''

################################################# START FORENSICS ALIASES
#alias binwalk
#alias scalpel
#alias foremost
################################################# END FORENSICS ALIASES


################################################# START BASIC SYSTEM ALIASES
alias displayservices='sudo service --status-all'

alias diskuagewarning='disk_usage_warning'

#alias backupomnisint='zip -r omnisint.zip /var/www/html'

alias differentialbackup='sudo bash /usr/local/bin/standalone/differential-backup.sh'
alias incrementalbackup='sudo rsync -av --link-dest=<previous_backup_directory> /var/www/html /media/csi/failover'
alias filelevelbackup='sudo rsync -av --delete /var/www/html/ /media/csi/failover/filelevelbackup'

alias diskimage='sudo dd if=/dev/sda of=/media/csi/failover/omnisint.iso bs=4M status=progress'

############################################################################## START SSH CONNECTORS ALIASES
alias masterserver='ssh jeremy@masterserver'
alias masterservercmd='ssh jeremy@masterserver -t'
alias sshfsmasterserver='sshfs jeremy@masterserver:/ /home/csi/Masterserver'
############################################################################## END SSH CONNECTORS ALIASES

#alias remotediskimage='remotediskimage.sh /dev/sda masterserver /home/jeremy/omnisint-remote-disk-image.iso'
#alias sshfsdiskimage='sshfs-remote-diskimage.sh /dev/sda /media/csi/remote remote-server:/home/jeremy/omnisint-remote-disk-image.iso'
#alias sshfsdiskimage2='sshfs-remote-diskimage2.sh /dev/sda /media/csi/remote remote-server:/home/jeremy/omnisint-remote-disk-image.iso'

alias reloadfstabpartitions='sudo systemctl daemon-reload'
#alias createsystemdservice=''

###################################################################################################### START CRUCIAL BASHRC FUNCTIONS

function disk_usage_warning() {
    local THRESHOLD=90  # Set the disk space utilization threshold in percentage

    local UTILIZATION=$(df -h --output=pcent / | awk 'NR==2 {print substr($1, 1, length($1)-1)}')

    if [ "$UTILIZATION" -ge "$THRESHOLD" ]; then
        echo "Warning: Disk space utilization is $UTILIZATION%."
    fi

    unset -f disk_usage_warning  # Unset the function to prevent it from running again
}


function takeowership() {
  if [ -z "$1" ]; then
    echo "Please provide a directory path."
    return 1
  fi

  if [ ! -d "$1" ]; then
    echo "The provided path is not a directory."
    return 1
  fi

  sudo chown -R csi:csi "$1"
  sudo chmod 775 "$1"
}


function addtolinestart {
  if [ $# -ne 2 ]; then
    echo "Usage: addtolinestart 'line' file"
    return 1
  fi

  line="$1"
  file="$2"

  # Insert line at start of each line
  sed -i "s/^/$line /" "$file" 
}

function createsystemservice {

}

